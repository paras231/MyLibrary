{"version":3,"sources":["Library.jsx","App.jsx","index.js"],"names":["Library","useState","bookName","authorName","categoryName","input","setInput","localStorage","getItem","JSON","parse","data","setData","inputEvent","e","value","target","name","preValue","useEffect","setItem","stringify","className","Form","Group","controlId","Label","Control","type","onChange","autoComplete","Button","variant","onClick","preventDefault","onMouseLeave","toast","map","val","index","Table","striped","bordered","hover","id","updateBook","filter","deleteBook","App","ReactDOM","render","document","getElementById"],"mappings":"yPAkJeA,EAxIC,WAIZ,IAQA,EAA0BC,mBAAS,CAC/BC,SAAU,GACVC,WAAY,GACZC,aAAc,KAHlB,mBAAOC,EAAP,KAAcC,EAAd,KAQA,EAAwBL,mBAfTM,aAAaC,QAAQ,SAErBC,KAAKC,MAAMH,aAAaC,QAAQ,UAEhC,IAWf,mBAAOG,EAAP,KAAaC,EAAb,KAEMC,EAAa,SAACC,GAChB,IAAMC,EAAQD,EAAEE,OAAOD,MACjBE,EAAOH,EAAEE,OAAOC,KAGtBX,GAAS,SAACY,GACN,MAAa,aAATD,EACO,CACHf,SAAUa,EACVZ,WAAYe,EAASf,WACrBC,aAAcc,EAASd,cAGX,eAATa,EACA,CACHf,SAAUgB,EAAShB,SACnBC,WAAYY,EACZX,aAAcc,EAASd,cAIpB,CACHF,SAAUgB,EAAShB,SACnBC,WAAYe,EAASf,WACrBC,aAAcW,OAqB9BI,qBAAU,WACNZ,aAAaa,QAAQ,QAASX,KAAKY,UAAUV,MAC9C,CAACA,IAUJ,OACI,qCACI,oBAAIW,UAAU,gBAAd,2BACA,qBAAKA,UAAU,WAAf,SAEI,eAACC,EAAA,EAAD,WACI,eAACA,EAAA,EAAKC,MAAN,CAAYF,UAAU,OAAOG,UAAU,oBAAvC,UACI,cAACF,EAAA,EAAKG,MAAN,wBACA,cAACH,EAAA,EAAKI,QAAN,CAAcC,KAAK,OAAOX,KAAK,WAAWY,SAAUhB,EAAYE,MAAOV,EAAMH,SAAW4B,aAAa,WAGzG,eAACP,EAAA,EAAKC,MAAN,CAAYF,UAAU,OAAOG,UAAU,kBAAvC,UACI,cAACF,EAAA,EAAKG,MAAN,0BACA,cAACH,EAAA,EAAKI,QAAN,CAAcC,KAAK,OAAOX,KAAK,aAAaY,SAAUhB,EAAYE,MAAOV,EAAMF,WAAY2B,aAAa,WAG5G,eAACP,EAAA,EAAKC,MAAN,CAAYF,UAAU,OAAOG,UAAU,oBAAvC,UACI,cAACF,EAAA,EAAKG,MAAN,uBACA,cAACH,EAAA,EAAKI,QAAN,CAAcC,KAAK,OAAOX,KAAK,eAAeY,SAAUhB,EAAYE,MAAOV,EAAMD,aAAc0B,aAAa,WAEhH,cAACC,EAAA,EAAD,CAAQC,QAAQ,UAAUJ,KAAK,SAASK,QA/CvC,SAACnB,GACdA,EAAEoB,iBACG7B,IAGDO,EAAQ,GAAD,mBAAKD,GAAL,CAAWN,KAClBC,EAAS,MAyC0D6B,aArC5D,WACXC,YAAM,4BAoCM,2BASJzB,EAAK0B,KAAI,SAACC,EAAKC,GACX,OAAO,gCACH,eAACC,EAAA,EAAD,CAAOC,SAAO,EAACC,UAAQ,EAACC,OAAK,EAACX,QAAQ,OAAtC,UACI,gCACI,+BACI,mCACA,2CACA,6CACA,+CAGR,gCACI,+BACI,6BAAKO,EAAQ,IACb,6BAAKD,EAAIpC,WACT,6BAAKoC,EAAInC,aACT,6BAAKmC,EAAIlC,eACT,6BAAI,cAAC2B,EAAA,EAAD,CAAQC,QAAQ,SAASC,QAAS,kBApDnD,SAACW,GAChB,IAAMC,EAAalC,EAAKmC,QAAO,SAACR,EAAKC,GACjC,OAAOA,IAAUK,KAErBhC,EAAQiC,GAgDgEE,CAAWR,IAAnD,8BAhBb,uBAsBf,cAAC,IAAD,QC/HGS,EATH,WAGR,OAAO,mCAEN,cAAC,EAAD,OCJLC,IAASC,OACP,mCAGD,cAAC,EAAD,MAKCC,SAASC,eAAe,W","file":"static/js/main.79e928f2.chunk.js","sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport \"./index.css\";\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport { Button, Form, Table } from 'react-bootstrap';\r\nimport { ToastContainer, toast } from 'react-toastify';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\n\r\n\r\n\r\n\r\nconst Library = () => {\r\n\r\n    // get data from localstorage\r\n\r\n    const getData = () => {\r\n        let list = localStorage.getItem(\"lists\");\r\n        if (list) {\r\n            return JSON.parse(localStorage.getItem(\"lists\"));\r\n        } else {\r\n            return [];\r\n        }\r\n    }\r\n    const [input, setInput] = useState({\r\n        bookName: \"\",\r\n        authorName: \"\",\r\n        categoryName: \"\"\r\n\r\n\r\n    });\r\n\r\n    const [data, setData] = useState(getData());\r\n\r\n    const inputEvent = (e) => {\r\n        const value = e.target.value;\r\n        const name = e.target.name;\r\n\r\n        // input data \r\n        setInput((preValue) => {\r\n            if (name === \"bookName\") {\r\n                return {\r\n                    bookName: value,\r\n                    authorName: preValue.authorName,\r\n                    categoryName: preValue.categoryName\r\n\r\n                }\r\n            } else if (name === \"authorName\") {\r\n                return {\r\n                    bookName: preValue.bookName,\r\n                    authorName: value,\r\n                    categoryName: preValue.categoryName\r\n\r\n                }\r\n            } else {\r\n                return {\r\n                    bookName: preValue.bookName,\r\n                    authorName: preValue.authorName,\r\n                    categoryName: value\r\n                }\r\n            }\r\n        })\r\n    }\r\n    // submit/add books\r\n    const onSubmit = (e) => {\r\n        e.preventDefault();\r\n        if (!input) {\r\n\r\n        } else {\r\n            setData([...data, input]);\r\n            setInput([]);\r\n        }\r\n    }\r\n    // notification bar\r\n    const notify = () => {\r\n        toast(\"Book Added Successfully\");\r\n    }\r\n\r\n    // useEffect for localstorage\r\n    useEffect(() => {\r\n        localStorage.setItem(\"lists\", JSON.stringify(data));\r\n    }, [data])\r\n\r\n\r\n    // delete a book\r\n    const deleteBook = (id) => {\r\n        const updateBook = data.filter((val, index) => {\r\n            return index !== id;\r\n        })\r\n        setData(updateBook);\r\n    }\r\n    return (\r\n        <>\r\n            <h1 className=\"heading_style\"> Your Library</h1>\r\n            <div className=\"main_div\">\r\n\r\n                <Form>\r\n                    <Form.Group className=\"mb-3\" controlId=\"formBasicBookName\">\r\n                        <Form.Label>Book Name</Form.Label>\r\n                        <Form.Control type=\"text\" name=\"bookName\" onChange={inputEvent} value={input.bookName}  autoComplete=\"off\"   />\r\n                    </Form.Group>\r\n\r\n                    <Form.Group className=\"mb-3\" controlId=\"formBasicAuthor\">\r\n                        <Form.Label>Author Name</Form.Label>\r\n                        <Form.Control type=\"text\" name=\"authorName\" onChange={inputEvent} value={input.authorName} autoComplete=\"off\" />\r\n                    </Form.Group>\r\n\r\n                    <Form.Group className=\"mb-3\" controlId=\"formBasicCategory\">\r\n                        <Form.Label>Category</Form.Label>\r\n                        <Form.Control type=\"text\" name=\"categoryName\" onChange={inputEvent} value={input.categoryName} autoComplete=\"off\"  />\r\n                    </Form.Group>\r\n                    <Button variant=\"primary\" type=\"submit\" onClick={onSubmit} onMouseLeave={notify} >\r\n                        Add Book\r\n                    </Button>\r\n                </Form>\r\n\r\n\r\n            </div>\r\n\r\n            {\r\n                data.map((val, index) => {\r\n                    return <div>\r\n                        <Table striped bordered hover variant=\"dark\">\r\n                            <thead>\r\n                                <tr>\r\n                                    <th>#</th>\r\n                                    <th>Book Name</th>\r\n                                    <th>Author Name</th>\r\n                                    <th>Category</th>\r\n                                </tr>\r\n                            </thead>\r\n                            <tbody>\r\n                                <tr>\r\n                                    <td>{index + 1}</td>\r\n                                    <td>{val.bookName}</td>\r\n                                    <td>{val.authorName}</td>\r\n                                    <td>{val.categoryName}</td>\r\n                                    <td><Button variant=\"danger\" onClick={() => deleteBook(index)}>Delete</Button></td>\r\n                                </tr>\r\n                            </tbody>\r\n                        </Table>              </div>\r\n                })\r\n            }\r\n            <ToastContainer />\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Library;","import React from 'react';\r\nimport \"./index.css\";\r\nimport Library from './Library';\r\n\r\n\r\nconst App = () => {\r\n\r\n\r\n    return <>\r\n       \r\n     <Library/>\r\n    </>\r\n}\r\n\r\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport \"./index.css\";\n\n\nReactDOM.render(\n  <>\n  \n \n <App/>\n\n \n \n  </> ,\n  document.getElementById('root')\n);\n\n\n\n\n\n"],"sourceRoot":""}